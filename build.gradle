plugins {
    id 'net.neoforged.gradle' version '[6.0.18,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'io.github.0ffz.github-packages' version '[1,2)'
}

version = mod_version
group = 'mrthomas20121.gravitation'
archivesBaseName = 'Aether Gravitation'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: mc_version

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.console.level', 'debug'

            mods {
                gravitation {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.console.level', 'debug'

            mods {
                gravitation {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            args '--mod', 'gravitation', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), '--existing-mod', 'aether'

            mods {
                gravitation {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven githubPackage.invoke("The-Aether-Team/The-Aether")
    maven githubPackage.invoke("The-Aether-Team/Nitrogen")
    maven { url = 'https://maven.minecraftforge.net/' }
    maven {
        name 'Thermal Maven'
        url 'https://maven.covers1624.net/'
    }
    maven { // TOP
        url 'https://maven.tterrag.com/'
    }
    maven { // JEI and Tinkers
        url 'https://dvs1.progwml6.com/files/maven/'
    }
    maven { // Patchouli
        url 'https://maven.blamejared.com/'
    }
    maven { // Curios
        url 'https://maven.theillusivec4.top/'
    }
    maven {
        name "cf"
        url "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        name 'ModdingLegacyMaven'
        url 'https://maven.moddinglegacy.com/maven'
    }

    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }

}

dependencies {
    minecraft "net.neoforged:forge:${mc_version}-${neoforge_version}"

    // compile against the JEI API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")

    // at runtime, use the full JEI
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-common:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")

    // aether
    compileOnly "com.aetherteam.aether:aether:${mc_version}-${aether_version}"
    runtimeOnly fg.deobf("com.aetherteam.aether:aether:${mc_version}-${aether_version}")

    // curio
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curio_version}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curio_version}:api")

    //implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.19.4:4.1.3')

    // addons
    //implementation fg.deobf("curse.maven:deep-${deep_aether_id}:${deep_aether_version}")

    // aether lost content
    //implementation fg.deobf("curse.maven:aether-lost-content-${aether_lost_content_id}:${aether_lost_content_version}")
    //implementation fg.deobf("com.legacy:structure-gel:${structure_gel_version}")

    // terrablender and aeroblender
    implementation fg.deobf("curse.maven:aeroblender-879879:4789008")
    implementation fg.deobf('com.github.glitchfiend:TerraBlender-forge:1.20.1-3.0.0.169')
    implementation fg.deobf("com.aetherteam.nitrogen:nitrogen_internals:${nitrogen_version}")
    implementation fg.deobf("com.aetherteam.cumulus:cumulus_menus:${cumulus_version}")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Aether Gravitation",
            "Specification-Vendor": "Mrthomas20121",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Vendor" : "gravitation",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
